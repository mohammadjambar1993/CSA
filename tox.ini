[tox]
envlist = py39, check-format, static-analysis
skipsdist = true

[testenv]
usedevelop = false
passenv = SSH_AUTH_SOCK
allowlist_externals = coverage
;install_command = pip install -U {opts} {packages}
install_command = pip install --use-pep517 -U {opts} {packages}
# use pyproject.toml instead of setup.cfg ^
deps =
    bleak~=0.18.1
    qasync~=0.23.0
    pyserial==3.5
    pandas==2.2.2
    numpy==1.25.2
    flask~=3.0.3
    requests~=2.32.3
    scipy~=1.11.1
    aiohttp~=3.10.10
    redis~=5.2.0 # Note: Your sync modules might need redis.asyncio (aioredis)
    python-dotenv~=1.0.1
    pytz~=2023.3
    mbst_core @ git+ssh://git@github.com/myantandco/mbst_core.git@v0.0.3
    pytest-cov==5.0.0
    pytest-benchmark==4.0.0
    pytest-profiling==1.7.0
    pytest-asyncio==0.25.3
    # specific deps for your sync modules if tests require them, e.g.
    aioredis
    psycopg2-binary 
    asyncpg
    kafka-python 
    aiokafka
    asyncio-mqtt
setenv =
        PYTHONPATH={toxinidir} # Ensure Python can find top-level packages
        # SOURCE_FOLDER removed as it's no longer a single source
        TEST_FOLDER = tests
commands =
;    pip install -U -e .
    pytest --durations=10 --junitxml=test-results/pytest-results-3.9.xml --benchmark-disable --cov={toxinidir}/redis_pg_sync/src --cov={toxinidir}/redis_mqtt_sync/src --cov={toxinidir}/redis_kafka_sync/src --cov={toxinidir}/redis_to_redis_sync/src --cov-report=html:test-results/coverage {env:TEST_FOLDER} -vv
;    -k "not test_consumer"
    coverage report -m

[flake8]
exclude =
    .tox,
    *.egg,
    .git,
    __pycache__,
    build,
    dist,
    .venv,
    docs 
select = E,W,F,B,B9 # Added B for bugbear
ignore =
    W503,
    F401,
    F403,
    F405,
    E501
max-line-length = 120
extend-ignore = E203
;docstring-convention = google  # plugin not enabled; causes flake8 crash
output-file = test-results/flake8_results.txt
application-import-names = redis_pg_sync, redis_mqtt_sync, redis_kafka_sync, redis_to_redis_sync, tests

[isort]
profile = black
multi_line_output = 3
;force_relative = true

[black]
max-line-length = 120 # Changed to 120
target-version = ['py39']

[mypy]
python_version = 3.9
ignore_missing_imports = true
explicit_package_bases = true
check_untyped_defs = true
# Adjust exclude if needed, or remove if too broad
exclude = ^src/mbst/bleusb_comm_toolkit/usb_communication/chars/.* 
# Add specific [mypy-module.*] sections if some 3rd party libs lack stubs

[mypy-bleusb_comm_toolkit.usb_communication.chars]
ignore_errors = True
follow_imports = skip

[testenv:check-format]
description = Check code formatting and linting
deps=
    black==24.8.0
    isort==5.13.2
    flake8==6.1.0
    flake8-black==0.3.6
    flake8-bugbear # Added
    interrogate==1.7.0
setenv =
        PYTHONPATH={toxinidir}
commands=
    flake8 redis_pg_sync/ redis_mqtt_sync/ redis_kafka_sync/ redis_to_redis_sync/ tests/
    isort --check --profile black redis_pg_sync/ redis_mqtt_sync/ redis_kafka_sync/ redis_to_redis_sync/ tests/
    black --check -t py39 -v redis_pg_sync/ redis_mqtt_sync/ redis_kafka_sync/ redis_to_redis_sync/ tests/
    interrogate -v --exclude '__init__.py' --fail-under 10 redis_pg_sync/src redis_mqtt_sync/src redis_kafka_sync/src redis_to_redis_sync/src # Check specific src dirs

[testenv:static-analysis]
install_command = pip install -U {opts} {packages}
deps =
    bleak~=0.18.1
    qasync~=0.23.0
    pyserial==3.5
    pandas==2.2.2
    numpy==1.25.2
    flask~=3.0.3
    requests~=2.32.3
    scipy~=1.11.1
    aiohttp~=3.10.10
    redis~=5.2.0 # Consider aioredis if used
    python-dotenv~=1.0.1
    pytz~=2023.3
    mbst_core @ git+ssh://git@github.com/myantandco/mbst_core.git@v0.0.3
    mypy==1.11.0 # Pinned mypy for consistency, 1.11.2 was in check-format, 1.15.0 here before
    types-pytz
    types-requests
    # Add stubs for other libraries if needed, e.g. types-redis if you use aioredis
    -rrequirements.txt
setenv =
        PYTHONPATH={toxinidir}
allowlist_externals = mypy
commands =
    mypy --config-file=tox.ini --implicit-optional redis_pg_sync/src redis_mqtt_sync/src redis_kafka_sync/src redis_to_redis_sync/src tests/

[testenv:format-imports]
deps=
    isort==5.13.2
setenv =
        PYTHONPATH={toxinidir}
commands=
    isort --profile black redis_pg_sync/ redis_mqtt_sync/ redis_kafka_sync/ redis_to_redis_sync/ tests/

[testenv:format-code]
deps=
    black==24.8.0
setenv =
        PYTHONPATH={toxinidir}
commands=
    black -t py39 -v redis_pg_sync/ redis_mqtt_sync/ redis_kafka_sync/ redis_to_redis_sync/ tests/
