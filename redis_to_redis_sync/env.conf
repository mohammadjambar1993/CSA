# === Source Redis Configuration ===
SOURCE_REDIS_HOST=source-redis
SOURCE_REDIS_PORT=6379
SOURCE_REDIS_PASSWORD=
SOURCE_REDIS_DB=0 # Default DB for source if not specified in stream name

# Source Connection Management
SOURCE_REDIS_MAX_RETRIES=5
SOURCE_REDIS_BACKOFF_BASE=1.0
SOURCE_REDIS_BACKOFF_MAX=30.0
SOURCE_REDIS_HEALTH_CHECK_INTERVAL=60
SOURCE_REDIS_POOL_SIZE=10

# === Target Redis Configuration ===
TARGET_REDIS_HOST=target-redis
TARGET_REDIS_PORT=6379
TARGET_REDIS_PASSWORD=
TARGET_REDIS_DB=0 # Default DB to write streams into on the target
TARGET_STREAM_PREFIX= # Optional prefix for stream names on the target (e.g., "synced:")

# Target Connection Management
TARGET_REDIS_MAX_RETRIES=5
TARGET_REDIS_BACKOFF_BASE=1.0
TARGET_REDIS_BACKOFF_MAX=30.0
TARGET_REDIS_HEALTH_CHECK_INTERVAL=60
TARGET_REDIS_POOL_SIZE=10

# === Stream Processing Configuration (Source Redis) ===
# Comma-separated list of streams to sync manually (can include db prefix like db1:stream)
# Leave empty to rely solely on auto-discovery
REDIS_STREAMS=
REDIS_STREAMS_ENABLED=true # Enable/disable stream processing
STREAM_CONSUMER_GROUP=redis-sync-group # Consumer group name on the source Redis
STREAM_CONSUMER_NAME=redis-sync-consumer # Base consumer name on source Redis
STREAM_BATCH_SIZE=100 # Messages per read attempt
STREAM_POLL_INTERVAL=1 # Seconds block time for XREADGROUP

# === Stream Auto-Discovery (Source Redis) ===
STREAM_AUTO_DISCOVERY=true
STREAM_DISCOVERY_PATTERNS=*-stream,device:*:stream,biosignal-*
STREAM_DISCOVERY_INTERVAL=10  # How often to check for new streams (seconds)
STREAM_AUTO_CREATE_CONSUMER_GROUPS=true # Create consumer groups on source Redis
# Which databases on the SOURCE Redis to scan (e.g., "0,1,5-7")
REDIS_DB_SEARCH_RANGE=0-15

# === Logging ===
LOG_LEVEL=INFO # DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s

# === Docker Configuration ===
REGISTRY=localhost:5000
TAG=latest

# Sync Behavior
# If true, create the stream on the target if it doesn't exist
TARGET_CREATE_STREAM_IF_NOT_EXISTS=true
# Optional: Set a MAXLEN on the target stream when creating/adding
# TARGET_STREAM_MAXLEN=10000 